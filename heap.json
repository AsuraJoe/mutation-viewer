{"config": {"Build Date": "17 Mar 2022", "Commit": "ac98382", "LLVM Version": "12.0.0", "Mull Version": "0.17.1", "URL": "https://github.com/mull-project/mull"}, "files": {"/home/tpugh_/tue/Heap/Heap.c": {"language": "cpp", "mutants": [{"id": "cxx_sub_to_add", "location": {"end": {"column": 17, "line": 29}, "start": {"column": 16, "line": 29}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Survived"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 25, "line": 29}, "start": {"column": 24, "line": 29}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Survived"}, {"id": "cxx_lt_to_ge", "location": {"end": {"column": 30, "line": 29}, "start": {"column": 29, "line": 29}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Survived"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 30, "line": 29}, "start": {"column": 29, "line": 29}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 14, "line": 38}, "start": {"column": 13, "line": 38}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Survived"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 10, "line": 39}, "start": {"column": 9, "line": 39}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Survived"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 20, "line": 39}, "start": {"column": 19, "line": 39}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Survived"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 10, "line": 40}, "start": {"column": 9, "line": 40}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Survived"}, {"id": "cxx_lt_to_ge", "location": {"end": {"column": 18, "line": 45}, "start": {"column": 17, "line": 45}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Survived"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 18, "line": 45}, "start": {"column": 17, "line": 45}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_mul_to_div", "location": {"end": {"column": 14, "line": 58}, "start": {"column": 13, "line": 58}}, "mutatorName": "Replaced * with /", "replacement": "/", "status": "Survived"}, {"id": "cxx_le_to_gt", "location": {"end": {"column": 18, "line": 58}, "start": {"column": 16, "line": 58}}, "mutatorName": "Replaced <= with >", "replacement": ">", "status": "Survived"}, {"id": "cxx_le_to_lt", "location": {"end": {"column": 18, "line": 58}, "start": {"column": 16, "line": 58}}, "mutatorName": "Replaced <= with <", "replacement": "<", "status": "Survived"}, {"id": "cxx_mul_to_div", "location": {"end": {"column": 15, "line": 59}, "start": {"column": 14, "line": 59}}, "mutatorName": "Replaced * with /", "replacement": "/", "status": "Survived"}, {"id": "cxx_lt_to_ge", "location": {"end": {"column": 16, "line": 60}, "start": {"column": 15, "line": 60}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Survived"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 16, "line": 60}, "start": {"column": 15, "line": 60}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_add_to_sub", "location": {"end": {"column": 38, "line": 60}, "start": {"column": 37, "line": 60}}, "mutatorName": "Replaced + with -", "replacement": "-", "status": "Survived"}, {"id": "cxx_post_inc_to_post_dec", "location": {"end": {"column": 45, "line": 60}, "start": {"column": 43, "line": 60}}, "mutatorName": "Replaced x++ with x--", "replacement": "--", "status": "Survived"}, {"id": "cxx_div_to_mul", "location": {"end": {"column": 16, "line": 71}, "start": {"column": 15, "line": 71}}, "mutatorName": "Replaced / with *", "replacement": "*", "status": "Survived"}, {"id": "cxx_ge_to_gt", "location": {"end": {"column": 21, "line": 71}, "start": {"column": 19, "line": 71}}, "mutatorName": "Replaced >= with >", "replacement": ">", "status": "Survived"}, {"id": "cxx_ge_to_lt", "location": {"end": {"column": 21, "line": 71}, "start": {"column": 19, "line": 71}}, "mutatorName": "Replaced >= with <", "replacement": "<", "status": "Killed"}, {"id": "cxx_gt_to_ge", "location": {"end": {"column": 16, "line": 73}, "start": {"column": 15, "line": 73}}, "mutatorName": "Replaced > with >=", "replacement": ">=", "status": "Survived"}, {"id": "cxx_gt_to_le", "location": {"end": {"column": 16, "line": 73}, "start": {"column": 15, "line": 73}}, "mutatorName": "Replaced > with <=", "replacement": "<=", "status": "Killed"}, {"id": "cxx_lt_to_ge", "location": {"end": {"column": 20, "line": 88}, "start": {"column": 19, "line": 88}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Killed"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 20, "line": 88}, "start": {"column": 19, "line": 88}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_post_inc_to_post_dec", "location": {"end": {"column": 32, "line": 88}, "start": {"column": 30, "line": 88}}, "mutatorName": "Replaced x++ with x--", "replacement": "--", "status": "Survived"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 30, "line": 89}, "start": {"column": 29, "line": 89}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Survived"}, {"id": "cxx_lt_to_ge", "location": {"end": {"column": 20, "line": 97}, "start": {"column": 19, "line": 97}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Killed"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 20, "line": 97}, "start": {"column": 19, "line": 97}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Killed"}, {"id": "cxx_post_inc_to_post_dec", "location": {"end": {"column": 32, "line": 97}, "start": {"column": 30, "line": 97}}, "mutatorName": "Replaced x++ with x--", "replacement": "--", "status": "Survived"}, {"id": "cxx_lt_to_ge", "location": {"end": {"column": 12, "line": 109}, "start": {"column": 11, "line": 109}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Killed"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 12, "line": 109}, "start": {"column": 11, "line": 109}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_post_inc_to_post_dec", "location": {"end": {"column": 20, "line": 109}, "start": {"column": 18, "line": 109}}, "mutatorName": "Replaced x++ with x--", "replacement": "--", "status": "Survived"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 7, "line": 111}, "start": {"column": 6, "line": 111}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Survived"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 34, "line": 114}, "start": {"column": 33, "line": 114}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 14, "line": 115}, "start": {"column": 13, "line": 115}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 21, "line": 117}, "start": {"column": 20, "line": 117}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}], "source": "/*************************************************************************\r\n *  Compilation:  javac Heap.java\r\n *  Execution:    java Heap < input.txt\r\n *  Dependencies: StdOut.java StdIn.java\r\n *  Data files:   http://algs4.cs.princeton.edu/24pq/tiny.txt\r\n *                http://algs4.cs.princeton.edu/24pq/words3.txt\r\n *  \r\n *  Sorts a sequence of strings from standard input using heapsort.\r\n *\r\n *  % more tiny.txt\r\n *  S O R T E X A M P L E\r\n *\r\n *  % java Heap < tiny.txt\r\n *  S O R T E X A M P L E A               [ one string per line ]\r\n *\r\n *  % more words3.txt\r\n *  bed bug dad yes zoo ... all bad yet\r\n *\r\n *  % java Heap < words3.txt\r\n *  all bad bed bug dad ... yes yet zoo   [ one string per line ]\r\n *\r\n *************************************************************************/\r\n#include <stdio.h>\r\n/***********************************************************************\r\n* Helper functions for comparisons and swaps.\r\n* Indices are \"off-by-one\" to support 1-based indexing.\r\n**********************************************************************/\r\nint less01(char *pq[], int i, int j) {\r\n\tif(strcmp(pq[i-1],pq[j-1]) < 0)\r\n\t\treturn 1;\r\n\telse return 0;\r\n}\r\n\r\n\r\n\r\nvoid exch(char *pq[], int i, int j) {\r\n    char *swap;\r\n\tswap = pq[i-1];\r\n    pq[i-1] = pq[j-1];\r\n    pq[j-1] = swap;\r\n}\r\n\r\n/* is v < w ?*/\r\nint less02(char *v, char *w) {\r\n\tif(strcmp(v,w) < 0)\r\n\t\treturn 1;\r\n\telse return 0;\r\n}\r\n\r\n\r\n\r\n/***********************************************************************\r\n* Helper functions to restore the heap invariant.\r\n**********************************************************************/\r\nvoid sink(char *pq[], int k, int N) {\r\nint j;\r\n\r\n    while (2*k <= N) {\r\n        j = 2*k;\r\n        if (j < N && less01(pq, j, j+1)) j++;\r\n        if (!less01(pq, k, j)) break;\r\n        exch(pq, k, j);\r\n        k = j;\r\n    }\r\n}\r\n\r\n\r\nvoid sort(char *pq[],int length)\r\n{\r\n\tint k;\r\n\tfor (k=length/2;k>=1;k--)\r\n\t\tsink(pq,k,length);\r\n\twhile (length>1)\r\n\t{\r\n\t\texch(pq,1,length--);\r\n\t\tsink(pq,1,length);\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n/***********************************************************************\r\n*  Check if array is sorted - useful for debugging\r\n***********************************************************************/\r\nint isSorted(char *a[],int length) {\r\n\tint i ;\r\n    for (i = 1; i < length; i++)\r\n        if (less02(a[i], a[i-1])) return 0;\r\n    return 1;\r\n}\r\n\r\n\r\n/* print array to standard output*/\r\nvoid show(char *a[],int length) {\r\n\tint i;\r\n    for (i = 0; i < length; i++) {\r\n\t\tprintf(\"%s\\n\",a[i]);\r\n    }\r\n}\r\n\r\n\r\n#define  MAX \t25\r\nchar *a[MAX];\r\n\r\n/* Read strings from standard input, sort them, and print.*/\r\nvoid main(int argc, char *argv[]) {\r\nint i;\r\n\tfor(i=1;i<argc;i++) \r\n\t{\r\n\t\ta[i-1] = argv[i]; \r\n\t} \r\n\r\n\tprintf(\"%d\\n\", isSorted(a, argc-1) );\r\n\tsort(a,argc-1);\r\n\tprintf(\"***************** Sorted Strings *****************\\n\");\r\n        show(a,argc-1);\r\n}\r\n"}}, "framework": {"brandingInformation": {"homepageUrl": "https://github.com/mull-project/mull"}, "name": "Mull", "version": "0.17.1, LLVM 12.0.0"}, "mutationScore": 24, "schemaVersion": "1.7", "thresholds": {"high": 80, "low": 60}}