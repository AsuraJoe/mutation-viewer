{"config": {"Build Date": "17 Mar 2022", "Commit": "ac98382", "LLVM Version": "12.0.0", "Mull Version": "0.17.1", "URL": "https://github.com/mull-project/mull"}, "files": {"/home/tpugh_/sunday/beginners-C-program-examples/DigitalRoot.c": {"language": "cpp", "mutants": [{"id": "cxx_init_const", "location": {"end": {"column": 36, "line": 10}, "start": {"column": 31, "line": 10}}, "mutatorName": "Replaced 'T a = b' with 'T a = 42'", "replacement": "42", "status": "Killed"}, {"id": "scalar_value_mutator", "location": {"end": {"column": 36, "line": 10}, "start": {"column": 31, "line": 10}}, "mutatorName": "Replaced scalar with 0 or 42", "replacement": "0 or 42", "status": "Killed"}, {"id": "cxx_replace_scalar_call", "location": {"end": {"column": 39, "line": 11}, "start": {"column": 4, "line": 11}}, "mutatorName": "Replaced call to a function with 42", "replacement": "42", "status": "Killed"}, {"id": "cxx_replace_scalar_call", "location": {"end": {"column": 24, "line": 12}, "start": {"column": 4, "line": 12}}, "mutatorName": "Replaced call to a function with 42", "replacement": "42", "status": "Survived"}, {"id": "cxx_assign_const", "location": {"end": {"column": 10, "line": 13}, "start": {"column": 9, "line": 13}}, "mutatorName": "Replaced 'a = b' with 'a = 42'", "replacement": "42", "status": "Killed"}, {"id": "cxx_ne_to_eq", "location": {"end": {"column": 17, "line": 14}, "start": {"column": 15, "line": 14}}, "mutatorName": "Replaced != with ==", "replacement": "==", "status": "Killed"}, {"id": "scalar_value_mutator", "location": {"end": {"column": 17, "line": 14}, "start": {"column": 15, "line": 14}}, "mutatorName": "Replaced scalar with 0 or 42", "replacement": "0 or 42", "status": "Killed"}, {"id": "cxx_init_const", "location": {"end": {"column": 16, "line": 15}, "start": {"column": 11, "line": 15}}, "mutatorName": "Replaced 'T a = b' with 'T a = 42'", "replacement": "42", "status": "Killed"}, {"id": "cxx_rem_to_div", "location": {"end": {"column": 25, "line": 15}, "start": {"column": 24, "line": 15}}, "mutatorName": "Replaced % with /", "replacement": "/", "status": "Killed"}, {"id": "scalar_value_mutator", "location": {"end": {"column": 25, "line": 15}, "start": {"column": 24, "line": 15}}, "mutatorName": "Replaced scalar with 0 or 42", "replacement": "0 or 42", "status": "Killed"}, {"id": "cxx_add_assign_to_sub_assign", "location": {"end": {"column": 15, "line": 16}, "start": {"column": 13, "line": 16}}, "mutatorName": "Replaced += with -=", "replacement": "-=", "status": "Killed"}, {"id": "cxx_div_assign_to_mul_assign", "location": {"end": {"column": 14, "line": 17}, "start": {"column": 12, "line": 17}}, "mutatorName": "Replaced /= with *=", "replacement": "*=", "status": "Killed"}, {"id": "scalar_value_mutator", "location": {"end": {"column": 14, "line": 17}, "start": {"column": 12, "line": 17}}, "mutatorName": "Replaced scalar with 0 or 42", "replacement": "0 or 42", "status": "Killed"}, {"id": "cxx_eq_to_ne", "location": {"end": {"column": 17, "line": 18}, "start": {"column": 15, "line": 18}}, "mutatorName": "Replaced == with !=", "replacement": "!=", "status": "Killed"}, {"id": "scalar_value_mutator", "location": {"end": {"column": 17, "line": 18}, "start": {"column": 15, "line": 18}}, "mutatorName": "Replaced scalar with 0 or 42", "replacement": "0 or 42", "status": "Killed"}, {"id": "cxx_logical_and_to_or", "location": {"end": {"column": 22, "line": 18}, "start": {"column": 20, "line": 18}}, "mutatorName": "Replaced && with ||", "replacement": "||", "status": "Killed"}, {"id": "cxx_gt_to_ge", "location": {"end": {"column": 30, "line": 18}, "start": {"column": 29, "line": 18}}, "mutatorName": "Replaced > with >=", "replacement": ">=", "status": "Killed"}, {"id": "cxx_gt_to_le", "location": {"end": {"column": 30, "line": 18}, "start": {"column": 29, "line": 18}}, "mutatorName": "Replaced > with <=", "replacement": "<=", "status": "Killed"}, {"id": "scalar_value_mutator", "location": {"end": {"column": 30, "line": 18}, "start": {"column": 29, "line": 18}}, "mutatorName": "Replaced scalar with 0 or 42", "replacement": "0 or 42", "status": "Killed"}, {"id": "cxx_assign_const", "location": {"end": {"column": 16, "line": 19}, "start": {"column": 15, "line": 19}}, "mutatorName": "Replaced 'a = b' with 'a = 42'", "replacement": "42", "status": "Killed"}, {"id": "cxx_assign_const", "location": {"end": {"column": 17, "line": 20}, "start": {"column": 16, "line": 20}}, "mutatorName": "Replaced 'a = b' with 'a = 42'", "replacement": "42", "status": "Killed"}, {"id": "scalar_value_mutator", "location": {"end": {"column": 17, "line": 20}, "start": {"column": 16, "line": 20}}, "mutatorName": "Replaced scalar with 0 or 42", "replacement": "0 or 42", "status": "Killed"}, {"id": "cxx_replace_scalar_call", "location": {"end": {"column": 59, "line": 23}, "start": {"column": 4, "line": 23}}, "mutatorName": "Replaced call to a function with 42", "replacement": "42", "status": "Killed"}, {"id": "scalar_value_mutator", "location": {"end": {"column": 10, "line": 24}, "start": {"column": 4, "line": 24}}, "mutatorName": "Replaced scalar with 0 or 42", "replacement": "0 or 42", "status": "Killed"}], "source": "// Program to find the digital root of a number in C\n// The digital root of a number is the single digit that you get by adding \n// all of the digits of the original number together. If the result of that \n// is multiple digits, you add those digits together, repeating the process \n//until you get a single digit. That digit is the digital root of the original number.\n\n#include <stdio.h>\n\nint main() {\n   unsigned int number, temp, droot = 0;\n   printf(\"Enter a positive number: \");\n   scanf(\"%u\", &number);\n   temp = number;\n   while(temp != 0) {\n      int digit = temp % 10;\n      droot += digit;\n      temp /=10;\n      if(temp == 0 && droot > 9) {\n         temp = droot;\n         droot = 0;\n      }\n   }\n   printf(\"The digital root of %u is %u\\n\", number, droot);\n   return 0;\n}\n"}}, "framework": {"brandingInformation": {"homepageUrl": "https://github.com/mull-project/mull"}, "name": "Mull", "version": "0.17.1, LLVM 12.0.0"}, "mutationScore": 95, "schemaVersion": "1.7", "thresholds": {"high": 80, "low": 60}}