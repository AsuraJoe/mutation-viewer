{"config": {"Build Date": "17 Mar 2022", "Commit": "ac98382", "LLVM Version": "12.0.0", "Mull Version": "0.17.1", "URL": "https://github.com/mull-project/mull"}, "files": {"/home/tpugh_/online_c/shaker.c": {"language": "cpp", "mutants": [{"id": "cxx_eq_to_ne", "location": {"end": {"column": 9, "line": 6}, "start": {"column": 7, "line": 6}}, "mutatorName": "Replaced == with !=", "replacement": "!=", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 28, "line": 17}, "start": {"column": 27, "line": 17}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Survived"}, {"id": "cxx_lt_to_ge", "location": {"end": {"column": 19, "line": 20}, "start": {"column": 18, "line": 20}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Killed"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 19, "line": 20}, "start": {"column": 18, "line": 20}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Killed"}, {"id": "cxx_pre_inc_to_pre_dec", "location": {"end": {"column": 27, "line": 20}, "start": {"column": 23, "line": 20}}, "mutatorName": "Replaced ++x with --x", "replacement": "--", "status": "Killed"}, {"id": "cxx_ne_to_eq", "location": {"end": {"column": 27, "line": 22}, "start": {"column": 25, "line": 22}}, "mutatorName": "Replaced != with ==", "replacement": "==", "status": "Survived"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 13, "line": 23}, "start": {"column": 12, "line": 23}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_gt_to_ge", "location": {"end": {"column": 18, "line": 23}, "start": {"column": 17, "line": 23}}, "mutatorName": "Replaced > with >=", "replacement": ">=", "status": "Survived"}, {"id": "cxx_gt_to_le", "location": {"end": {"column": 18, "line": 23}, "start": {"column": 17, "line": 23}}, "mutatorName": "Replaced > with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_lt_to_ge", "location": {"end": {"column": 20, "line": 38}, "start": {"column": 19, "line": 38}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Survived"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 20, "line": 38}, "start": {"column": 19, "line": 38}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_post_inc_to_post_dec", "location": {"end": {"column": 27, "line": 38}, "start": {"column": 25, "line": 38}}, "mutatorName": "Replaced x++ with x--", "replacement": "--", "status": "Survived"}, {"id": "cxx_eq_to_ne", "location": {"end": {"column": 30, "line": 39}, "start": {"column": 28, "line": 39}}, "mutatorName": "Replaced == with !=", "replacement": "!=", "status": "Survived"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 34, "line": 39}, "start": {"column": 33, "line": 39}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Survived"}, {"id": "cxx_lt_to_ge", "location": {"end": {"column": 18, "line": 42}, "start": {"column": 17, "line": 42}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Survived"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 18, "line": 42}, "start": {"column": 17, "line": 42}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_pre_inc_to_pre_dec", "location": {"end": {"column": 25, "line": 42}, "start": {"column": 22, "line": 42}}, "mutatorName": "Replaced ++x with --x", "replacement": "--", "status": "Survived"}], "source": "// https://bit.ly/2rcvXK5\r\n#include  <stdio.h>  \r\n\r\n// can be any swap function. This swap is optimized for numbers.\r\nvoid swap(int *x, int *y) {\r\n\tif(x == y)\r\n\t\treturn;\r\n\t*x ^= *y;\r\n\t*y ^= *x;\r\n\t*x ^= *y;\r\n}\r\nvoid cocktailsort(int *a, size_t n) {\r\n\twhile(1) {\r\n\t\t// packing two similar loops into one\r\n\t\tchar flag;\r\n\t\tint it, i;\r\n\t\tsize_t start[2] = {1, n - 1},\r\n\t\t\t   end[2] = {n, 0},\r\n\t\t\t   inc[2] = {1, -1};\r\n\t\tfor(it = 0; it < 2; ++it) {\r\n\t\t\tflag = 1;\r\n\t\t\tfor(i = start[it]; i != end[it]; i += inc[it])\r\n\t\t\t\tif(a[i - 1] > a[i]) {\r\n\t\t\t\t\tswap(a + i - 1, a + i);\r\n\t\t\t\t\tflag = 0;\r\n\t\t\t\t}\r\n\t\t\tif(flag)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\n \r\nint main(void) {\r\n\tint a[] = { 5, -1, 101, -4, 0, 1, 8, 6, 2, 3 };\r\n\tint i;\r\n\tsize_t n = sizeof(a)/sizeof(a[0]);\r\n    printf(\"Original Array:\\n\");\r\n    for (i = 0; i < n; i++)\r\n    printf(\"%d%s\", a[i], i == n - 1 ? \"\\n\" : \" \");  \r\n    printf(\"\\nSorted Array:\\n\");\r\n\tcocktailsort(a, n);\r\n\tfor ( i = 0; i < n; ++i)\r\n\t\tprintf(\"%d \", a[i]);\r\n\treturn 0;\r\n}\r\n"}}, "framework": {"brandingInformation": {"homepageUrl": "https://github.com/mull-project/mull"}, "name": "Mull", "version": "0.17.1, LLVM 12.0.0"}, "mutationScore": 29, "schemaVersion": "1.7", "thresholds": {"high": 80, "low": 60}}